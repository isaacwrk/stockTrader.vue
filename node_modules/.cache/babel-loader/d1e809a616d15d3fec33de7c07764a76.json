{"remainingRequest":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/babel-loader/lib/index.js!/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/eslint-loader/index.js??ref--13-0!/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/src/store/modules/portfolio.js","dependencies":[{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/src/store/modules/portfolio.js","mtime":1632968191848},{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nexport default {\n  state: {\n    funds: 1000,\n    stocks: []\n  },\n  mutations: {\n    buyStock: function buyStock(state, _ref) {\n      var stockId = _ref.stockId,\n          quantity = _ref.quantity,\n          stockPrice = _ref.stockPrice;\n\n      /*Criando verificação de ação, usando find() se o usuário já tiver ação\n      não apagará e sim acrescentará a quantitade */\n      var record = state.stocks.find(function (element) {\n        return element.id == stockId;\n      });\n\n      if (record) {\n        record.quantity += quantity;\n      } else {\n        state.stocks.push({\n          id: stockId,\n          quantity: quantity\n        });\n      } //ajuste de valor de saldo\n\n\n      state.funds -= stockPrice * quantity;\n    },\n    sellStock: function sellStock(state, _ref2) {\n      var stockId = _ref2.stockId,\n          quantity = _ref2.quantity,\n          stockPrice = _ref2.stockPrice;\n      var record = state.stocks.find(function (element) {\n        return element.id == stockId;\n      });\n\n      if (record.quantity > quantity) {\n        record.quantity -= quantity;\n      } else {\n        state.stocks.splice(state.stocks.indexOf(record), 1);\n      }\n\n      state.funds += stockPrice * quantity;\n    }\n  },\n  actions: {\n    sellStock: function sellStock(_ref3, order) {\n      var commit = _ref3.commit;\n      commit('sellStock', order);\n    }\n  },\n  getters: {\n    stockPortfolio: function stockPortfolio(state, getters) {\n      return state.stocks.map(function (stock) {\n        var record = getters.stocks.find(function (element) {\n          return element.id == stock.id;\n        });\n        return {\n          id: stock.id,\n          quantity: stock.quantity,\n          name: record.name,\n          price: record.price\n        };\n      });\n    },\n    funds: function funds(state) {\n      return state.funds;\n    }\n  }\n};",{"version":3,"sources":["/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/src/store/modules/portfolio.js"],"names":["state","funds","stocks","mutations","buyStock","stockId","quantity","stockPrice","record","find","element","id","push","sellStock","splice","indexOf","actions","order","commit","getters","stockPortfolio","map","stock","name","price"],"mappings":";;AAAA,eAAe;AACXA,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAAE,IADL;AAEFC,IAAAA,MAAM,EAAC;AAFL,GADK;AAKXC,EAAAA,SAAS,EAAC;AACNC,IAAAA,QADM,oBACGJ,KADH,QACuC;AAAA,UAA7BK,OAA6B,QAA7BA,OAA6B;AAAA,UAArBC,QAAqB,QAArBA,QAAqB;AAAA,UAAZC,UAAY,QAAZA,UAAY;;AACzC;;AAEA,UAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAaO,IAAb,CAAkB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,IAAcN,OAAlB;AAAA,OAAzB,CAAf;;AACA,UAAGG,MAAH,EAAU;AACNA,QAAAA,MAAM,CAACF,QAAP,IAAmBA,QAAnB;AACH,OAFD,MAEK;AACDN,QAAAA,KAAK,CAACE,MAAN,CAAaU,IAAb,CAAkB;AACdD,UAAAA,EAAE,EAAEN,OADU;AAEdC,UAAAA,QAAQ,EAACA;AAFK,SAAlB;AAIH,OAXwC,CAYzC;;;AACAN,MAAAA,KAAK,CAACC,KAAN,IAAeM,UAAU,GAAGD,QAA5B;AACH,KAfK;AAgBNO,IAAAA,SAhBM,qBAgBIb,KAhBJ,SAgBwC;AAAA,UAA7BK,OAA6B,SAA7BA,OAA6B;AAAA,UAArBC,QAAqB,SAArBA,QAAqB;AAAA,UAAZC,UAAY,SAAZA,UAAY;AAC1C,UAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAaO,IAAb,CAAkB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,IAAcN,OAAlB;AAAA,OAAzB,CAAf;;AACA,UAAGG,MAAM,CAACF,QAAP,GAAkBA,QAArB,EAA8B;AAC1BE,QAAAA,MAAM,CAACF,QAAP,IAAmBA,QAAnB;AACH,OAFD,MAEK;AACDN,QAAAA,KAAK,CAACE,MAAN,CAAaY,MAAb,CAAoBd,KAAK,CAACE,MAAN,CAAaa,OAAb,CAAqBP,MAArB,CAApB,EAAiD,CAAjD;AACH;;AACDR,MAAAA,KAAK,CAACC,KAAN,IAAeM,UAAU,GAAGD,QAA5B;AACH;AAxBK,GALC;AA+BXU,EAAAA,OAAO,EAAC;AACJH,IAAAA,SADI,4BACeI,KADf,EACqB;AAAA,UAAdC,MAAc,SAAdA,MAAc;AACrBA,MAAAA,MAAM,CAAC,WAAD,EAAaD,KAAb,CAAN;AACH;AAHG,GA/BG;AAoCXE,EAAAA,OAAO,EAAC;AACJC,IAAAA,cADI,0BACWpB,KADX,EACiBmB,OADjB,EACyB;AACzB,aAAOnB,KAAK,CAACE,MAAN,CAAamB,GAAb,CAAiB,UAAAC,KAAK,EAAE;AAC3B,YAAMd,MAAM,GAAGW,OAAO,CAACjB,MAAR,CAAeO,IAAf,CAAoB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,EAAR,IAAcW,KAAK,CAACX,EAAxB;AAAA,SAA3B,CAAf;AACA,eAAM;AACFA,UAAAA,EAAE,EAACW,KAAK,CAACX,EADP;AAEFL,UAAAA,QAAQ,EAACgB,KAAK,CAAChB,QAFb;AAGFiB,UAAAA,IAAI,EAACf,MAAM,CAACe,IAHV;AAIFC,UAAAA,KAAK,EAAChB,MAAM,CAACgB;AAJX,SAAN;AAMH,OARM,CAAP;AASH,KAXG;AAYJvB,IAAAA,KAZI,iBAYED,KAZF,EAYQ;AACR,aAAOA,KAAK,CAACC,KAAb;AACH;AAdG;AApCG,CAAf","sourcesContent":["export default {\n    state:{\n        funds: 1000,\n        stocks:[]\n    },\n    mutations:{\n        buyStock(state,{stockId,quantity,stockPrice}){\n            /*Criando verificação de ação, usando find() se o usuário já tiver ação\n            não apagará e sim acrescentará a quantitade */\n            const record = state.stocks.find(element => element.id == stockId)\n            if(record){\n                record.quantity += quantity\n            }else{\n                state.stocks.push({\n                    id: stockId,\n                    quantity:quantity\n                })\n            }\n            //ajuste de valor de saldo\n            state.funds -= stockPrice * quantity\n        },\n        sellStock(state,{stockId,quantity,stockPrice}){\n            const record = state.stocks.find(element => element.id == stockId)\n            if(record.quantity > quantity){\n                record.quantity -= quantity\n            }else{\n                state.stocks.splice(state.stocks.indexOf(record),1)\n            }\n            state.funds += stockPrice * quantity\n        }\n    },\n    actions:{\n        sellStock({commit},order){\n            commit('sellStock',order)\n        }\n    },\n    getters:{\n        stockPortfolio(state,getters){\n            return state.stocks.map(stock=>{\n                const record = getters.stocks.find(element => element.id == stock.id)\n                return{\n                    id:stock.id,\n                    quantity:stock.quantity,\n                    name:record.name,\n                    price:record.price\n                }\n            })\n        },\n        funds(state){\n            return state.funds\n        }\n    }\n}"]}]}