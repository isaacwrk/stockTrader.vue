{"remainingRequest":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/babel-loader/lib/index.js!/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/eslint-loader/index.js??ref--13-0!/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/src/store/modules/stocks.js","dependencies":[{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/src/store/modules/stocks.js","mtime":1633037878630},{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Stocks from '../../data/stocks';\nexport default {\n  state: {\n    stocks: []\n  },\n  mutations: {\n    setStocks: function setStocks(state, stocks) {\n      state.stocks = stocks;\n    },\n    randomizeStocks: function randomizeStocks(state) {\n      state.stocks.forEach(function (stock) {\n        stock.price = Math.round(stock.price * (1 + Math.random() - 0.42));\n      });\n    }\n  },\n  actions: {\n    buyStock: function buyStock(_ref, order) {\n      var commit = _ref.commit;\n      commit('buyStock', order);\n    },\n    initStocks: function initStocks(_ref2) {\n      var commit = _ref2.commit;\n      commit('setStocks', Stocks);\n    },\n    randomizeStocks: function randomizeStocks(_ref3) {\n      var commit = _ref3.commit;\n      commit('randomizeStocks');\n    }\n  },\n  getters: {\n    stocks: function stocks(state) {\n      return state.stocks;\n    }\n  }\n};",{"version":3,"sources":["/home/dantel/Desktop/workspace/ISAAC/front/vuejs/stocktrader/src/store/modules/stocks.js"],"names":["Stocks","state","stocks","mutations","setStocks","randomizeStocks","forEach","stock","price","Math","round","random","actions","buyStock","order","commit","initStocks","getters"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAC;AACFC,IAAAA,MAAM,EAAC;AADL,GADK;AAIXC,EAAAA,SAAS,EAAC;AACNC,IAAAA,SADM,qBACIH,KADJ,EACWC,MADX,EACkB;AACpBD,MAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACH,KAHK;AAING,IAAAA,eAJM,2BAIUJ,KAJV,EAIgB;AAClBA,MAAAA,KAAK,CAACC,MAAN,CAAaI,OAAb,CAAqB,UAAAC,KAAK,EAAG;AACzBA,QAAAA,KAAK,CAACC,KAAN,GAAeC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACC,KAAN,IAAe,IAAIC,IAAI,CAACE,MAAL,EAAJ,GAAoB,IAAnC,CAAX,CAAf;AACH,OAFD;AAGH;AARK,GAJC;AAeXC,EAAAA,OAAO,EAAC;AACJC,IAAAA,QADI,0BACcC,KADd,EACoB;AAAA,UAAdC,MAAc,QAAdA,MAAc;AACpBA,MAAAA,MAAM,CAAC,UAAD,EAAYD,KAAZ,CAAN;AACH,KAHG;AAIJE,IAAAA,UAJI,6BAIgB;AAAA,UAARD,MAAQ,SAARA,MAAQ;AAChBA,MAAAA,MAAM,CAAC,WAAD,EAAaf,MAAb,CAAN;AACH,KANG;AAOJK,IAAAA,eAPI,kCAOqB;AAAA,UAARU,MAAQ,SAARA,MAAQ;AACrBA,MAAAA,MAAM,CAAC,iBAAD,CAAN;AACH;AATG,GAfG;AA0BXE,EAAAA,OAAO,EAAC;AACJf,IAAAA,MADI,kBACGD,KADH,EACS;AACT,aAAOA,KAAK,CAACC,MAAb;AACH;AAHG;AA1BG,CAAf","sourcesContent":["import Stocks from '../../data/stocks'\n\nexport default {\n    state:{\n        stocks:[]\n    },\n    mutations:{\n        setStocks(state, stocks){\n            state.stocks = stocks\n        },\n        randomizeStocks(state){\n            state.stocks.forEach(stock =>{\n                stock.price =  Math.round(stock.price * (1 + Math.random() - 0.42))\n            })\n        }\n\n    },\n    actions:{\n        buyStock({commit},order){\n            commit('buyStock',order)\n        },\n        initStocks({commit}){\n            commit('setStocks',Stocks)\n        },\n        randomizeStocks({commit}){\n            commit('randomizeStocks')\n        }\n    },\n    getters:{\n        stocks(state){\n            return state.stocks\n        }\n    }\n}"]}]}